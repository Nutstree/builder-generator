package nl.loxia.builder.generator.ap.test.builderchaining;

/**
 * Generated by RIGD-Loxia Builder generator
 */
public class BuilderChainingBuilder<PARENT> {
    private BuilderChainingChild value;
    private BuilderChainingChildBuilder<BuilderChainingBuilder<PARENT>> valueBuilder;

    private PARENT parent;

    public BuilderChainingBuilder() {
    }

    public BuilderChainingBuilder(PARENT parent) {
        this.parent = parent;
    }

    public BuilderChainingBuilder<PARENT> withValue(BuilderChainingChild value) {
        this.value = value;
        valueBuilder = null;
        return this;
    }

    public BuilderChainingChildBuilder<? extends BuilderChainingBuilder<PARENT>> withValue() {
        if (valueBuilder == null) {
            valueBuilder = new BuilderChainingChildBuilder<>(this);
            value = null;
        }
        return valueBuilder;
    }

    public BuilderChaining build() {
        BuilderChaining result = new BuilderChaining();
        result.setValue(valueBuilder != null ? valueBuilder.build() : value);
        return result;
    }

    public PARENT end() {
        return parent;
    }

    public static BuilderChainingBuilder<Void> copyOf(BuilderChaining bron) {
        if (bron == null) {
            return null;
        }
        BuilderChainingBuilder<Void> builder = new BuilderChainingBuilder<>();
        builder.valueBuilder = BuilderChainingChildBuilder.copyOf(bron.getValue(), builder);
        return builder;
    }

    public static <T> BuilderChainingBuilder<T> copyOf(BuilderChaining bron, T parentBuilder) {
        if (bron == null) {
            return null;
        }
        BuilderChainingBuilder<T> builder = new BuilderChainingBuilder<>(parentBuilder);
        builder.valueBuilder = BuilderChainingChildBuilder.copyOf(bron.getValue(), builder);
        return builder;
    }
}
